##################################################
# Fancy PWD display function
##################################################
# The home directory (HOME) is replaced with a ~
# The last pwdmaxlen characters of the PWD are displayed
# Leading partial directory names are striped off
# /home/me/stuff          -> ~/stuff               if USER=me
# /usr/share/big_dir_name -> ../share/big_dir_name if pwdmaxlen=20
##################################################

export SVN_EDITOR=/usr/bin/emacs
# use 256 color xterm
export TERM=xterm-256color
# needed for github LFS
export GIT_LFS_SKIP_SMUDGE=1

bash_prompt_command() {
  # How many characters of the $PWD should be kept
  local pwdmaxlen=25
  # Indicate that there has been dir truncation
  local trunc_symbol=".."
  local dir=${PWD##*/}
  pwdmaxlen=$(((pwdmaxlen < ${#dir}) ? ${#dir} : pwdmaxlen))
  NEW_PWD=${PWD/$HOME/~}
  local pwdoffset=$((${#NEW_PWD} - pwdmaxlen))
  if [ ${pwdoffset} -gt "0" ]; then
    NEW_PWD=${NEW_PWD:$pwdoffset:$pwdmaxlen}
    NEW_PWD=${trunc_symbol}/${NEW_PWD#*/}
  fi
}
#
bash_prompt() {
  local NONE='\[\033[0m\]' # unsets color to term's fg color

  # regular colors
  local K='\[\033[0;30m\]' # black
  local R='\[\033[0;31m\]' # red
  local G='\[\033[0;32m\]' # green
  local Y='\[\033[0;33m\]' # yellow
  local B='\[\033[0;34m\]' # blue
  local M='\[\033[0;35m\]' # magenta
  local C='\[\033[0;36m\]' # cyan
  local W='\[\033[0;37m\]' # white

  # empahsized (bolded) colors
  local EMK='\[\033[1;30m\]'
  local EMR='\[\033[1;31m\]'
  local EMG='\[\033[1;32m\]'
  local EMY='\[\033[1;33m\]'
  local EMB='\[\033[1;34m\]'
  local EMM='\[\033[1;35m\]'
  local EMC='\[\033[1;36m\]'
  local EMW='\[\033[1;37m\]'

  # background colors
  local BGK='\[\033[40m\]'
  local BGR='\[\033[41m\]'
  local BGG='\[\033[42m\]'
  local BGY='\[\033[43m\]'
  local BGB='\[\033[44m\]'
  local BGM='\[\033[45m\]'
  local BGC='\[\033[46m\]'
  local BGW='\[\033[47m\]'

  local UC=$C               # user's color
  [ $UID -eq "0" ] && UC=$R # root's color

  #PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'
  #PS1="${EMK}[${UC}\u${EMR}@${UC}\h ${EMB}\${NEW_PWD}${EMK}]${UC}\\$ ${NONE}"
  PS1="${W}[\t${W}${Y}:${R}\u${R}@${R}\h:${C}\${NEW_PWD}${Y}]${W}\\$ ${NONE}"
}
#

case "$TERM" in
"dumb")
  PS1="dumb > "
  ;;
xterm* | rxvt* | eterm* | screen*)
  PROMPT_COMMAND=bash_prompt_command
  bash_prompt
  unset bash_prompt
  ;;
*)
  PS1="> "
  ;;
esac

# Intel macOS brew path
export PATH=/opt/homebrew/bin:$PATH

# Setting up golang path
export HOMEBREWPATH=/opt/homebrew/bin
export GOPATH=/Volumes/angeldisk/dev//baldr9-github/iot-blackbox/learn/go/go-workspace
export GOROOT="$(brew --prefix golang)/libexec"
export PYROOT="$(brew --prefix python)/libexec"
export PATH=$PATH:$HOMEBREWPATH
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:$GOROOT/bin
export PATH=$PATH:$PYROOT/bin
export PATH=/usr/local/sbin:$PATH
export PATH=/opt/homebrew/opt/openjdk/bin:$PATH

# brew nvm instructions
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"                                       # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion

# Rust programming env
. "$HOME/.cargo/env"

# use curl instead of wget
# http://www.mymacosx.com/terminal/wget-replacement-macos.html
alias wget='curl -O'
alias sshl='ssh -oHostKeyAlgorithms=ssh-rsa -o PubkeyAcceptedAlgorithms=ssh-rsa -oKexAlgorithms=+diffie-hellman-group1-sha1'
alias scpl='scp -O -oHostKeyAlgorithms=ssh-rsa -o PubkeyAcceptedAlgorithms=ssh-rsa -oKexAlgorithms=+diffie-hellman-group1-sha1'
alias gobit0='ssh -l rojasfe 167.116.10.250'
alias gobyte1='ssh -l rojasfe 10.43.56.201'
alias gomega='ssh -l rojasfe 167.116.6.92'
alias gochef='ssh -l ionchef ionchef-builder-osxbox.local'
alias gopur='ssh -l baldr baldr09vm.local'
alias md5sum='md5 -r'
alias grepo="cd /Volumes/angeldisk/dev"
alias ghub="cd /Volumes/angeldisk/dev/github"
alias gdocs="cd /Volumes/angeldisk/Documents/"
alias gmaster='git fetch -a -p;git checkout master;git pull --rebase;git status'
alias gmain='git fetch -a -p;git checkout main;git pull --rebase;git status'
